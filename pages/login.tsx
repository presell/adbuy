// /pages/log-in.tsx
// This file was generated by Plasmic and extended for Supabase Auth integration.

import * as React from "react";
import { useState } from "react";
import { useRouter } from "next/router";
import { PageParamsProvider as PageParamsProvider__ } from "@plasmicapp/react-web/lib/host";
import { PlasmicLogIn } from "../components/plasmic/ad_buy/PlasmicLogIn";
import { createClient } from "@supabase/supabase-js";

// âœ… Initialize Supabase Client (replace with your new project keys)
const supabase = createClient(
  "https://habwycahldzwxreftesz.supabase.co",
  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhhYnd5Y2FobGR6d3hyZWZ0ZXN6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk4NDY0NjcsImV4cCI6MjA3NTQyMjQ2N30.TWRXYN6942fhPEPG4fT6UDRzPeu06abxrFkbwxhEVQQ"
);

function LogIn() {
  const router = useRouter();
  const [email, setEmail] = useState("");
  const [otpSent, setOtpSent] = useState(false);
  const [otp, setOtp] = useState("");
  const [errorMsg, setErrorMsg] = useState("");

  // âœ… Step 1: Send OTP to user's email
  async function sendOtp() {
    setErrorMsg("");
    const { error } = await supabase.auth.signInWithOtp({ email });
    if (error) {
      setErrorMsg(error.message);
      console.error("[Send OTP] Error:", error.message);
    } else {
      console.log("[Send OTP] Email sent successfully to:", email);
      setOtpSent(true);
    }
  }

  // âœ… Step 2: Verify OTP + Sync to Plasmic currentUser
  async function verifyOtp() {
    setErrorMsg("");
    console.log("[Verify OTP] Starting verification...");

    const { data, error } = await supabase.auth.verifyOtp({
      email,
      token: otp,
      type: "email",
    });

    if (error || !data?.session) {
      console.error("[Verify OTP] Invalid OTP or missing session:", error?.message);
      setErrorMsg(error?.message || "Invalid OTP");
      return;
    }

    console.log("[Verify OTP] âœ… Authentication successful!");
    console.log("[Verify OTP] User object:", data.user);

    // âœ… Persist Supabase session
    const { data: sessionData } = await supabase.auth.getSession();
    const sessionKey = "sb-habwycahldzwxreftesz-auth-token";
    localStorage.setItem(sessionKey, JSON.stringify(sessionData.session));

    // âœ… Notify listeners (Plasmic + Supabase)
    window.dispatchEvent(new StorageEvent("storage", { key: sessionKey }));

    // âœ… Update Plasmic currentUser immediately
    const { data: { user } } = await supabase.auth.getUser();
    if (user) {
      const plasmicUser = {
        id: user.id,
        email: user.email,
        isLoggedIn: true,
        role: "authenticated",
      };
      window.__PLASMIC_USER__ = plasmicUser;
      window.plasmicUser = plasmicUser;
      window.dispatchEvent(new StorageEvent("storage", { key: "plasmicUser" }));

      console.log("[Verify OTP] ðŸ§  Plasmic currentUser updated:", plasmicUser);
    }

    alert("âœ… Logged in successfully!");
    router.push("/"); // redirect to homepage or dashboard
  }

  return (
    <PageParamsProvider__
      route={router?.pathname}
      params={router?.query}
      query={router?.query}
    >
      <div style={{ padding: 20, textAlign: "center" }}>
        {!otpSent ? (
          <>
            <input
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="Enter your email"
              style={{ padding: "10px", margin: "10px", width: "250px" }}
            />
            <br />
            <button
              onClick={sendOtp}
              style={{ padding: "10px 20px", cursor: "pointer" }}
            >
              Send OTP
            </button>
          </>
        ) : (
          <>
            <input
              value={otp}
              onChange={(e) => setOtp(e.target.value)}
              placeholder="Enter OTP"
              style={{ padding: "10px", margin: "10px", width: "250px" }}
            />
            <br />
            <button
              onClick={verifyOtp}
              style={{ padding: "10px 20px", cursor: "pointer" }}
            >
              Verify OTP
            </button>
          </>
        )}
        {errorMsg && (
          <p style={{ color: "red", marginTop: "10px" }}>{errorMsg}</p>
        )}
      </div>

      <PlasmicLogIn />
    </PageParamsProvider__>
  );
}

export default LogIn;
