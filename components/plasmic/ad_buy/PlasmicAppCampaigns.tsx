/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: fKsvVS5XnenaZB1533Xwx5
// Component: mTVCR0WtVqvB

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { _useGlobalVariants } from "./plasmic"; // plasmic-import: fKsvVS5XnenaZB1533Xwx5/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: fKsvVS5XnenaZB1533Xwx5/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: fKsvVS5XnenaZB1533Xwx5/projectcss
import sty from "./PlasmicAppCampaigns.module.css"; // plasmic-import: mTVCR0WtVqvB/css

import CursorIsolatedSvgIcon from "./icons/PlasmicIcon__CursorIsolatedSvg"; // plasmic-import: KuDULaM8dChm/icon
import LeadsIconSvgIcon from "./icons/PlasmicIcon__LeadsIconSvg"; // plasmic-import: v_nPMrRo9l36/icon
import WorkflowsiconSvgIcon from "./icons/PlasmicIcon__WorkflowsiconSvg"; // plasmic-import: ySCbYXMYPZYM/icon
import GiftSvgrepoComSvgIcon from "./icons/PlasmicIcon__GiftSvgrepoComSvg"; // plasmic-import: 2E5Q_54R4vQ5/icon
import HelpSvgIcon from "./icons/PlasmicIcon__HelpSvg"; // plasmic-import: omxN7Fvt6PUz/icon
import LeadAppSvgIcon from "./icons/PlasmicIcon__LeadAppSvg"; // plasmic-import: 0splylcoynac/icon
import PhoneSvgIcon from "./icons/PlasmicIcon__PhoneSvg"; // plasmic-import: eBcKEzruN5_L/icon
import AnalyticsSharpSvgrepoComSvgIcon from "./icons/PlasmicIcon__AnalyticsSharpSvgrepoComSvg"; // plasmic-import: SblPtQiKCaIH/icon
import ThinChevronRightSvgIcon from "./icons/PlasmicIcon__ThinChevronRightSvg"; // plasmic-import: Srne4mVNsLJU/icon
import CreditCardSvgIcon from "./icons/PlasmicIcon__CreditCardSvg"; // plasmic-import: 8wp36EsoJArA/icon

createPlasmicElementProxy;

export type PlasmicAppCampaigns__VariantMembers = {};
export type PlasmicAppCampaigns__VariantsArgs = {};
type VariantPropType = keyof PlasmicAppCampaigns__VariantsArgs;
export const PlasmicAppCampaigns__VariantProps = new Array<VariantPropType>();

export type PlasmicAppCampaigns__ArgsType = {};
type ArgPropType = keyof PlasmicAppCampaigns__ArgsType;
export const PlasmicAppCampaigns__ArgProps = new Array<ArgPropType>();

export type PlasmicAppCampaigns__OverridesType = {
  root?: Flex__<"div">;
  appLayout?: Flex__<"div">;
  sidebarGroup?: Flex__<"div">;
  sidebarLeft?: Flex__<"div">;
  link?: Flex__<"a"> & Partial<LinkProps>;
  img?: Flex__<typeof PlasmicImg__>;
  sidebarRight?: Flex__<"div">;
  contentWrapper?: Flex__<"div">;
};

export interface DefaultAppCampaignsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicAppCampaigns__RenderFunc(props: {
  variants: PlasmicAppCampaigns__VariantsArgs;
  args: PlasmicAppCampaigns__ArgsType;
  overrides: PlasmicAppCampaigns__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const styleTokensClassNames = _useStyleTokens();

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicAppCampaigns.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicAppCampaigns.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicAppCampaigns.pageMetadata.title}
        />

        <meta
          key="og:image"
          property="og:image"
          content={PlasmicAppCampaigns.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicAppCampaigns.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"appLayout"}
            data-plasmic-override={overrides.appLayout}
            className={classNames(projectcss.all, sty.appLayout, "app-layout")}
          >
            <div
              data-plasmic-name={"sidebarGroup"}
              data-plasmic-override={overrides.sidebarGroup}
              className={classNames(
                projectcss.all,
                sty.sidebarGroup,
                "sidebar-group"
              )}
            >
              <div
                data-plasmic-name={"sidebarLeft"}
                data-plasmic-override={overrides.sidebarLeft}
                className={classNames(
                  projectcss.all,
                  sty.sidebarLeft,
                  "sidebar-left"
                )}
              >
                <PlasmicLink__
                  data-plasmic-name={"link"}
                  data-plasmic-override={overrides.link}
                  className={classNames(projectcss.all, projectcss.a, sty.link)}
                  component={Link}
                  href={`/app/campaigns`}
                  platform={"nextjs"}
                >
                  <CursorIsolatedSvgIcon
                    className={classNames(projectcss.all, sty.svg__q4P0J)}
                    role={"img"}
                  />
                </PlasmicLink__>
                <div className={classNames(projectcss.all, sty.freeBox__a66Na)}>
                  <LeadsIconSvgIcon
                    className={classNames(projectcss.all, sty.svg__tqKAz)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__dZGi)}>
                  <WorkflowsiconSvgIcon
                    className={classNames(projectcss.all, sty.svg___7C4S)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__jnNtU)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7Ek4O)}
                  >
                    <GiftSvgrepoComSvgIcon
                      className={classNames(projectcss.all, sty.svg___0Kyt)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__giCo4)}
                  >
                    <HelpSvgIcon
                      className={classNames(projectcss.all, sty.svg__kYeaq)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bya1J)}
                  >
                    <PlasmicImg__
                      data-plasmic-name={"img"}
                      data-plasmic-override={overrides.img}
                      alt={""}
                      className={classNames(sty.img)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/ad_buy/images/dgHeadshotSmallPng.png",
                        fullWidth: 300,
                        fullHeight: 300,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"sidebarRight"}
                data-plasmic-override={overrides.sidebarRight}
                className={classNames(
                  projectcss.all,
                  sty.sidebarRight,
                  "sidebar-right"
                )}
              >
                <div className={classNames(projectcss.all, sty.freeBox__qB1ME)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mtGsk)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2Zs,
                        "geologica-h1"
                      )}
                    >
                      {"Campaigns"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__xz2Gg)}
                  >
                    <LeadsIconSvgIcon
                      className={classNames(projectcss.all, sty.svg__a8FQp)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jiAkQ,
                        "geologica-h2"
                      )}
                    >
                      {"Campaigns"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___5AE4R)}
                  >
                    <LeadAppSvgIcon
                      className={classNames(projectcss.all, sty.svg__ik3U)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xssPn,
                        "geologica-h2"
                      )}
                    >
                      {"Leads"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wNdcU)}
                  >
                    <PhoneSvgIcon
                      className={classNames(projectcss.all, sty.svg__kCsvm)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bk83,
                        "geologica-h2"
                      )}
                    >
                      {"Calls"}
                    </div>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___11Bxa,
                      "geologica-h3"
                    )}
                  >
                    {"Reporting"}
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__l2Vc4)}
                  >
                    <AnalyticsSharpSvgrepoComSvgIcon
                      className={classNames(projectcss.all, sty.svg__dhr6S)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__k29Mp,
                        "geologica-h2"
                      )}
                    >
                      {"Analytics"}
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__p7GVa)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7UULl)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__e7IFp,
                        "geologica-h3"
                      )}
                    >
                      {"Overview"}
                    </div>
                    <ThinChevronRightSvgIcon
                      className={classNames(projectcss.all, sty.svg___1IyKw)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ckesd)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__x2GcE)}
                    >
                      <CreditCardSvgIcon
                        className={classNames(projectcss.all, sty.svg__jZmwm)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ilkp,
                          "geologica-h2"
                        )}
                      >
                        {"Daily Spend"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jrY0B
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3Wo6A,
                          "geologica-h2"
                        )}
                      >
                        {"$50"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__fVqZp)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__wpDlF
                        )}
                      />
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__g0VWg)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cdLhl)}
                    >
                      <CreditCardSvgIcon
                        className={classNames(projectcss.all, sty.svg__vcrNd)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ncV0J,
                          "geologica-h2"
                        )}
                      >
                        {"Daily Spend"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__amWhZ
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0FwIa,
                          "geologica-h2"
                        )}
                      >
                        {"$50"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__gxzUb)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__c27NC
                        )}
                      />
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__riZhW)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__j27Ta)}
                    >
                      <CreditCardSvgIcon
                        className={classNames(projectcss.all, sty.svg__mSOz)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rhv2,
                          "geologica-h2"
                        )}
                      >
                        {"Daily Spend"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vcAbu
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cN6,
                          "geologica-h2"
                        )}
                      >
                        {"$50"}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tAFdq)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vgy12
                        )}
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"contentWrapper"}
              data-plasmic-override={overrides.contentWrapper}
              className={classNames(projectcss.all, sty.contentWrapper)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__z9Rp)} />

              <div className={classNames(projectcss.all, sty.freeBox__jGJrb)} />

              <div className={classNames(projectcss.all, sty.freeBox__dZzq4)} />

              <div
                className={classNames(projectcss.all, sty.freeBox___4EGmk)}
              />

              <div className={classNames(projectcss.all, sty.freeBox__tzU4U)}>
                <div className={classNames(projectcss.all, sty.freeBox__z6DLs)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ctvt4,
                      "geologica-h1"
                    )}
                  >
                    {"Overview"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__jGDt)} />

              <div className={classNames(projectcss.all, sty.freeBox__nVd5E)} />
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "appLayout",
    "sidebarGroup",
    "sidebarLeft",
    "link",
    "img",
    "sidebarRight",
    "contentWrapper"
  ],
  appLayout: [
    "appLayout",
    "sidebarGroup",
    "sidebarLeft",
    "link",
    "img",
    "sidebarRight",
    "contentWrapper"
  ],
  sidebarGroup: ["sidebarGroup", "sidebarLeft", "link", "img", "sidebarRight"],
  sidebarLeft: ["sidebarLeft", "link", "img"],
  link: ["link"],
  img: ["img"],
  sidebarRight: ["sidebarRight"],
  contentWrapper: ["contentWrapper"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  appLayout: "div";
  sidebarGroup: "div";
  sidebarLeft: "div";
  link: "a";
  img: typeof PlasmicImg__;
  sidebarRight: "div";
  contentWrapper: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAppCampaigns__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAppCampaigns__VariantsArgs;
    args?: PlasmicAppCampaigns__ArgsType;
    overrides?: NodeOverridesType<T>;
  } &
    // Specify variants directly as props
    Omit<PlasmicAppCampaigns__VariantsArgs, ReservedPropsType> &
    // Specify args directly as props
    Omit<PlasmicAppCampaigns__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicAppCampaigns__ArgProps,
          internalVariantPropNames: PlasmicAppCampaigns__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAppCampaigns__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAppCampaigns";
  } else {
    func.displayName = `PlasmicAppCampaigns.${nodeName}`;
  }
  return func;
}

export const PlasmicAppCampaigns = Object.assign(
  // Top-level PlasmicAppCampaigns renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    appLayout: makeNodeComponent("appLayout"),
    sidebarGroup: makeNodeComponent("sidebarGroup"),
    sidebarLeft: makeNodeComponent("sidebarLeft"),
    link: makeNodeComponent("link"),
    img: makeNodeComponent("img"),
    sidebarRight: makeNodeComponent("sidebarRight"),
    contentWrapper: makeNodeComponent("contentWrapper"),

    // Metadata about props expected for PlasmicAppCampaigns
    internalVariantProps: PlasmicAppCampaigns__VariantProps,
    internalArgProps: PlasmicAppCampaigns__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Campaigns | AdBuy",
      description: "",
      ogImageSrc:
        "https://site-assets.plasmic.app/d1eac95f3934b1653900f60b4f2a55c6.png",
      canonical: ""
    }
  }
);

export default PlasmicAppCampaigns;
/* prettier-ignore-end */
